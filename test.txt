debug Token on;
debug Assign on;
debug Expr on;
//setup
/////////////////// CORRECT MISSING SEMICOLON AT END OF STATEMENT BUG!!!!!!!!!!!!!!!!!!!!!!!
///////////////////  CORRECT EXPRESSIONS!!!!!!!!!!!!!!!   'true'  and 'false'; Utility class!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Int i = 10;
Int i2 = 100;
Float f = 3.14;
Float f2 = 9.99;
String s = "123456";
String s2 = "\t\tNATE\n\n";
Bool b = T;
Bool b2 = F;



// identifier cases : normal good!  decalre to identifier, identifier to identifier, identifier to lit, declare to lit


//Bool b = "T";
//print("b = ", b);



// identifier cases : NOT normal
    // INT DECLARE : GOOD
    // INT IDENT -> IDENT : GOOD
    // INT IDENT -> LITERAL : GOOD
    // FLOAT DECLARE: GOOD
    // FLOAT IDENT -> IDENT:  GOOD
    // FLOAT IDENT -> LITERAL: GOOD
    // STRING DECLARE : GOOD
    // STRING IDENT -> IDENT : GOOD
    // STRING IDENT -> LITERAL : GOOD
    // BOOL DECLARE: GOOD
    // BOOL IDENT -> IDENT : GOOD
    // BOOL IDENT -> LITERAL : GOOD



//  EXPRESSIONS : NORMAL
// Note:  need to handle expression non normal cases:  i.e. String s = T == F; or String s = b == b2;  where both b and b2 are bools
String s2 = "3.24";
print(s2);

String a = "";
print(a);

Int val = (3 * 3)  # (4/2)^2; // ans 94? : YES
print(val);


String s2 = "Chris" # "\tBuckner";
print(s2);

Int z = 2.14 + 3; //  GOOD
Int z = f + 12.2;
print(z);


//These cases need to be handled properly
String ss = 2 + 3;
String ss = 3.14 + 2.22;
debug Exit on;










// handle these
// string declare from number (error)
String aeeu111 = 123;
// string declare from number identifier (error)
Int i = 123;
aeeu111 = i;
// Boolean declare from number (error)
//Bool b = 123;
// Boolean declare from number identifier (error)
//b = i;
// Boolean assign from value that is not a boolean type (error)
//b = t; // lower case t or f
//b = "oops"; // oops cannot be parsed to boolean
// Boolean assign from string value that is a boolean type (not an error)
b = "T"; // or "F"

// try to make T or F keywords and not allow users to use those as identifiers
//Bool T = T; // identifier T is a keyword and cannot be an identifier
// fixing this should make fixing these errors easier
//Int print;
//Float while;
// as well as future keywords that we will use



// test.txt will be for testing error cases
